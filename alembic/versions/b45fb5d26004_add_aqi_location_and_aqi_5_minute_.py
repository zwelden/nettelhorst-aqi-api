"""Add aqi_location and aqi_5_minute_history tables

Revision ID: b45fb5d26004
Revises: 
Create Date: 2025-09-06 12:31:42.845966

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b45fb5d26004'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('task_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('task_name', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('result', sa.Text(), nullable=True),
    sa.Column('is_successful', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_logs_id'), 'task_logs', ['id'], unique=False)
    op.create_index(op.f('ix_task_logs_task_name'), 'task_logs', ['task_name'], unique=False)
    op.drop_table('_prisma_migrations')
    op.alter_column('aqi_5_minute_history', 'measure_time',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('aqi_5_minute_history', 'created_at',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('aqi_5_minute_history', 'updated_at',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.drop_index('aqi_5_minute_history_aqi_location_id_idx', table_name='aqi_5_minute_history')
    op.drop_index('aqi_5_minute_history_measure_time_idx', table_name='aqi_5_minute_history')
    op.create_index(op.f('ix_aqi_5_minute_history_measure_time'), 'aqi_5_minute_history', ['measure_time'], unique=False)
    op.drop_constraint('aqi_5_minute_history_aqi_location_id_fkey', 'aqi_5_minute_history', type_='foreignkey')
    op.create_foreign_key(None, 'aqi_5_minute_history', 'aqi_location', ['aqi_location_id'], ['id'])
    op.alter_column('aqi_location', 'created_at',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('aqi_location', 'updated_at',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('aqi_location', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               existing_nullable=False)
    op.alter_column('aqi_location', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_constraint(None, 'aqi_5_minute_history', type_='foreignkey')
    op.create_foreign_key('aqi_5_minute_history_aqi_location_id_fkey', 'aqi_5_minute_history', 'aqi_location', ['aqi_location_id'], ['id'], onupdate='CASCADE', ondelete='RESTRICT')
    op.drop_index(op.f('ix_aqi_5_minute_history_measure_time'), table_name='aqi_5_minute_history')
    op.create_index('aqi_5_minute_history_measure_time_idx', 'aqi_5_minute_history', ['measure_time'], unique=False)
    op.create_index('aqi_5_minute_history_aqi_location_id_idx', 'aqi_5_minute_history', ['aqi_location_id'], unique=False)
    op.alter_column('aqi_5_minute_history', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               existing_nullable=False)
    op.alter_column('aqi_5_minute_history', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('aqi_5_minute_history', 'measure_time',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               existing_nullable=False)
    op.create_table('_prisma_migrations',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('checksum', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('finished_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('migration_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('logs', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('rolled_back_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('started_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('applied_steps_count', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='_prisma_migrations_pkey')
    )
    op.drop_index(op.f('ix_task_logs_task_name'), table_name='task_logs')
    op.drop_index(op.f('ix_task_logs_id'), table_name='task_logs')
    op.drop_table('task_logs')
    # ### end Alembic commands ###